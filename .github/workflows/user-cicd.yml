# .github/workflows/user-cicd.yml

name: CI/CD for User Backend

on:
  push:
    branches: [ "login-cicd" ]
    paths:
      - 'user/**'
      - '.github/workflows/user-cicd.yml'
      - 'k8s/user-backend-deployment.yaml' # ✅ 경로 수정

env:
  ACR_NAME: "kt16big"
  IMAGE_NAME: "user-backend" # user -> user-backend로 수정 권장
  WORKING_DIR: "user"
  AKS_CLUSTER_NAME: "kt16big-aks"
  AKS_RESOURCE_GROUP: "kt16big"
  DEPLOYMENT_FILE: "k8s/user-backend-deployment.yaml" # ✅ 경로 수정

jobs:
  build-and-push-to-acr:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.get_sha.outputs.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get short SHA
        id: get_sha
        run: echo "sha=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # ✅ [추가] gradlew 스크립트에 실행 권한 부여
      - name: Grant execute permission for gradlew
        working-directory: ${{ env.WORKING_DIR }}
        run: chmod +x ./gradlew

      - name: Build with Gradle
        working-directory: ${{ env.WORKING_DIR }}
        run: ./gradlew build

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.WORKING_DIR }}
          file: ${{ env.WORKING_DIR }}/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.get_sha.outputs.sha }}

  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push-to-acr
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}

      - name: Substitute IMAGE_TAG and Deploy to AKS
        env:
          IMAGE_TAG: ${{ needs.build-and-push-to-acr.outputs.image_tag }}
        run: |
          envsubst < ${{ env.DEPLOYMENT_FILE }} | kubectl apply -f -