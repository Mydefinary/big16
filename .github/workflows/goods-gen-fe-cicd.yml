# .github/workflows/goods-gen-fe-cicd.yml

name: 'CI/CD for GOODS-GEN Frontend'

on:
  push:
    branches: [ "img-gen-cicd" ]
    paths:
      - 'goods-gen-react/frontend/**'
      - '.github/workflows/goods-gen-fe-cicd.yml'
  pull_request:
    branches: [ "img-gen-cicd" ]
    paths:
      - 'goods-gen-react/frontend/**'
      - '.github/workflows/goods-gen-fe-cicd.yml'


env:
  ACR_NAME: "kt16big"
  IMAGE_NAME: "goods-gen-frontend"
  WORKING_DIR: "goods-gen-react/frontend"
  AKS_CLUSTER_NAME: "kt16big-aks"
  AKS_RESOURCE_GROUP: "kt16big"

jobs:
  build-and-push-to-acr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Log in to ACR
        run: az acr login --name ${{ env.ACR_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.WORKING_DIR }}
          file: ${{ env.WORKING_DIR }}/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push-to-acr
    steps:
      # 1. 리포지토리 코드 가져오기 (all-deployment.yaml 파일을 읽기 위해 필요)
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}
    # 4. Manifest 파일을 사용하여 AKS에 배포 (⭐️ 핵심 변경 사항)
      - name: Deploy to AKS using all-deployment.yaml
        uses: azure/k8s-deploy@v4
        with:
          action: 'deploy'
          # ✅ 배포 파일 경로를 all-deployment.yaml로 지정합니다.
          #    (파일이 리포지토리 루트에 있다면 경로를 맞게 수정하세요)
          manifests: |
            ./all-deployment.yaml
          # ✅ 교체할 이미지 정보를 명확히 전달합니다.
          #    이 액션은 manifests 파일에서 'kt16big.azurecr.io/ppl-gen-backend' 이미지를 찾아
          #    태그를 :${{ github.sha }} 로 교체하여 적용합니다.
          images: |
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}