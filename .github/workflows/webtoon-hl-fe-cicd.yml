name: CI/CD for Webtoon Highlight Frontend

on:
  push:
    branches: [ webtoon-highlight ]              # 필요시 변경
    paths:
      - "frontend/**"
      - "deployments/webtoon-highlight-frontend-deployment.yaml"
      - ".github/workflows/webtoon-hl-fe-cicd.yml"
  workflow_dispatch: {}                           # 수동 실행 허용

concurrency:
  group: webtoon-hl-fe-${{ github.ref }}
  cancel-in-progress: false

env:
  ACR_NAME: "kt16big"
  IMAGE_NAME: "webtoon-hl-frontend"
  WORKING_DIR: "frontend"
  AKS_CLUSTER_NAME: "kt16big-aks"
  AKS_RESOURCE_GROUP: "kt16big"
  DEPLOYMENT_NAME: "webtoon-hl-frontend-deployment"
  CONTAINER_NAME: "webtoon-hl-frontend-container"
  K8S_NAMESPACE: "webtoon-hl"                     # ← 네임스페이스 맞춰주세요 (다르면 변경)

jobs:
  build-and-push-to-acr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write                              # azure/login OIDC
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # 확실하지 않음: 없으면 포털서 생성 필요

      - name: ACR login
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=$(date +%Y%m%d%H%M%S)-${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build & Push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.WORKING_DIR }}
          file: ${{ env.WORKING_DIR }}/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          build-args: |                               # 프런트 빌드 인자
            REACT_APP_HL_API=/api
            PUBLIC_URL=/webtoon-hl
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push-to-acr
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ env.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}

      - name: Apply manifest if not exists
        run: |
          if ! kubectl -n "$K8S_NAMESPACE" get deploy "$DEPLOYMENT_NAME" >/dev/null 2>&1; then
            kubectl -n "$K8S_NAMESPACE" apply -f deployments/webtoon-highlight-frontend-deployment.yaml
          fi

      - name: Rollout using new image
        run: |
          kubectl -n "$K8S_NAMESPACE" set image deployment/$DEPLOYMENT_NAME \
            $CONTAINER_NAME=$ACR_NAME.azurecr.io/$IMAGE_NAME:${{ env.IMAGE_TAG }}
          kubectl -n "$K8S_NAMESPACE" rollout status deployment/$DEPLOYMENT_NAME --timeout=180s
