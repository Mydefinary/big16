name: CI/CD for Webtoon Highlight Frontend

on:
  push:
    branches: [ webtoon-highlight ]
    paths:
      - "frontend/**"
      - "deployments/webtoon-highlight-frontend-deployment.yaml"
      - ".github/workflows/webtoon-hl-fe-cicd.yml"
  workflow_dispatch: {}

concurrency:
  group: webtoon-hl-fe-${{ github.ref }}
  cancel-in-progress: false

env:
  ACR_NAME: "kt16big"
  IMAGE_NAME: "webtoon-hl-frontend"
  WORKING_DIR: "frontend"
  AKS_CLUSTER_NAME: "kt16big-aks"
  AKS_RESOURCE_GROUP: "kt16big"
  DEPLOYMENT_NAME: "webtoon-hl-frontend-deployment"
  CONTAINER_NAME: "webtoon-hl-frontend-container"
  K8S_NAMESPACE: "default"

jobs:
  build-and-push-to-acr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.WORKING_DIR }}
          file: ${{ env.WORKING_DIR }}/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          build-args: |            # ✅ 중요: 서브패스/상대 API 반영
            PUBLIC_URL=/webtoon-hl
            REACT_APP_HL_API=/api
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push-to-acr
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ env.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}

      # ✅ ConfigMap/프로브/리소스 변경 반영(항상)
      - name: Apply manifest (always)
        run: |
          # 매니페스트에 namespace가 박혀 있으면 지우고 default로 적용
          sed '/^[[:space:]]*namespace:/d' deployments/webtoon-highlight-frontend-deployment.yaml \
          | kubectl -n "$K8S_NAMESPACE" apply -f -

      - name: Set image
        run: |
          kubectl -n "$K8S_NAMESPACE" set image deployment/$DEPLOYMENT_NAME \
            $CONTAINER_NAME=$ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.sha }}

      - name: Wait for rollout
        run: kubectl -n "$K8S_NAMESPACE" rollout status deployment/$DEPLOYMENT_NAME --timeout=600s
