name: Chatbot Backend CI/CD

on:
  push:
    branches: [ "chatbot" ]
    paths:
      - "chatbot/backend/**"
      - "deployments/chatbot-backend-deployment.yaml"
      - ".github/workflows/chatbot-backend-cicd.yaml"
  pull_request:
    branches: [ "chatbot" ]
    paths:
      - "chatbot/backend/**"

env:
  ACR_NAME: "kt16big"
  IMAGE_NAME: "chatbot-backend"
  WORKING_DIR: "chatbot/backend"
  AKS_CLUSTER_NAME: "kt16big-aks"
  AKS_RESOURCE_GROUP: "kt16big"
  DEPLOYMENT_FILE: "deployments/chatbot-backend.yaml"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # 테스트 러너가 있다면 여기에 추가 (pytest 등)
      - name: Run tests
        run: |
          echo "No tests yet" # pytest -q

  docker-publish:
    needs: build-and-test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-backend:sha-${{ github.sha }}
            ghcr.io/${{ github.repository }}-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: docker-publish
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4

      - name: Configure kubeconfig from secret
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > $HOME/.kube/config

      - name: Apply manifests
        run: |
          kubectl apply -f deployments/chatbot-backend-deployment.yaml

      - name: Update image to current SHA
        run: |
          kubectl set image deployment/chatbot-backend \
            backend=ghcr.io/${{ github.repository }}-backend:sha-${{ github.sha }}
          kubectl rollout status deployment/chatbot-backend --timeout=120s
