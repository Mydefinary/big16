# 서버 포트 설정
server:
  port: 8000

# Spring Cloud Gateway 설정
spring:
  cloud:
    gateway:
      # 전역 CORS(Cross-Origin Resource Sharing) 설정
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://20.249.154.2"
            allowedMethods:
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            maxAge: 3600

      # 라우팅 규칙 정의
      routes:
        # ===================================================
        # 1. 인증/인가 (Auth) 서비스 라우팅 (인증 불필요)
        # ===================================================
        - id: auth-service
          uri: lb://auth-backend-service
          predicates:
            - Path=/api/auth/**
          filters:
            - StripPrefix=1
          order: 0

        # ===================================================
        # 2. 사용자 정보 (User) 서비스 라우팅 분리 및 우선순위 지정
        # ===================================================
        # 2-1. 회원가입 등 인증이 필요 없는 User API 경로
        - id: user-public-routes
          uri: lb://user-backend-service
          predicates:
            # ✅ [수정] 정규표현식을 사용하여 여러 공개 경로를 한 번에 지정합니다.
            - Path=/api/users/{segment:(register|check-email|find-id)}
          filters:
            - StripPrefix=1 # 인증 필터 없음
          order: 1

        # 2-2. 인증이 필요한 User API 경로 (예: 내 정보 조회, 탈퇴 등)
        - id: user-secure-routes
          uri: lb://user-backend-service
          predicates:
            - Path=/api/users/**
          filters:
            - name: JwtAuthenticationFilter
            - StripPrefix=1
          order: 2

        # ===================================================
        # 3. PPL 생성기 서비스 라우팅 (인증 필요)
        # ===================================================
        - id: ppl-gen-service
          uri: lb://ppl-gen-backend-service
          predicates:
            - Path=/api/ppl-gen/**
          filters:
            - name: JwtAuthenticationFilter
            - StripPrefix=2
          order: 10

        # ===================================================
        # 4. 굿즈 생성기 서비스 라우팅 (인증 필요)
        # ===================================================
        - id: goods-gen-service
          uri: lb://goods-gen-backend-service
          predicates:
            - Path=/api/goods-gen/**
          filters:
            - name: JwtAuthenticationFilter
            - StripPrefix=2
          order: 11

        # ===================================================
        # 5. 웹툰 대시보드 서비스 라우팅 (인증 필요)
        # ===================================================
        - id: webtoon-dashboard-service
          uri: lb://webtoon-dashboard-backend-service
          predicates:
            - Path=/api/webtoon/**
          filters:
            - name: JwtAuthenticationFilter
            - StripPrefix=2
          order: 12

      # default-filters 설정 (기존과 동일)
      default-filters:
        - name: JwtAuthenticationFilter
          args:
            secretKey: ${JWT_SECRET}
