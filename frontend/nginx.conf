server {
  listen 80;

<<<<<<< HEAD
  # 프런트엔드 (BrowserRouter with basename="/webtoon-hl")
  location /webtoon-hl {
    alias /usr/share/nginx/html;
    index index.html index.htm;
    
    # 정적 파일 캐시 설정
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
      expires 1y;
      add_header Cache-Control "public, immutable";
      try_files $uri =404;
    }
    
    # SPA fallback - React Router의 모든 경로를 index.html로
    try_files $uri /webtoon-hl/index.html;
  }

  # API 프록시
  location /api/ {
    client_max_body_size 50m;
    proxy_read_timeout 600s;
    
    # /api/highlight -> /highlight 로 전달
    proxy_pass http://127.0.0.1:8000/;
    
    proxy_http_version 1.1;
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
  }

  # 루트 접근 시 webtoon-hl로 리다이렉트
  location = / {
    return 301 /webtoon-hl/;
  }

  # 다른 모든 경로는 404
  location / {
    return 404;
  }
}
=======
  # /webtoon-hl 정적 파일 캐시
  location ~* ^/webtoon-hl/.*\.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
    alias /usr/share/nginx/html/;
    expires 1y;
    add_header Cache-Control "public, immutable";
    try_files $uri =404;
  }

  # SPA fallback (서브패스)
  location /webtoon-hl/ {
    alias /usr/share/nginx/html/;
    index index.html;
    # URI는 /webtoon-hl/index.html로 유지 (자산 경로 안정)
    try_files $uri $uri/ /webtoon-hl/index.html;
  }

  # (선택) 루트로 접근하면 /webtoon-hl/로 리다이렉트
  location = / { return 301 /webtoon-hl/; }

  # 그 외는 404
  location / { return 404; }
}
>>>>>>> 09c0de12 (plz...)
